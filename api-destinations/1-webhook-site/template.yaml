AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Create an API destination in EventBridge - open API using Webhook.site

Parameters:
  MyWebhookURL:
    Type: String
    Default: 'https://webhook.site/<<ENTER YOUR UNIQUE URL HERE>>'

Resources:

# API destinations are third-party targets outside of AWS that you can invoke with an HTTP request. EventBridge invokes
# the HTTP endpoint and delivers the event as a payload within the request. You can use any preferred HTTP method, such
# as GET or POST. You can use input transformers to change the payload format to match your target.


  MyEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: "MyEventBus"

  DLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: EventBusDLQ

  DLQPermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref DLQ
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowEventBusDLQ"
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
            Resource: !GetAtt DLQ.Arn

# An API destination uses a Connection to manage the authentication credentials for a target. This defines the
# authorization type used, which can be an API key, OAuth client credentials grant, or a basic user name and password.
  MyConnection:
    Type: AWS::Events::Connection
    Properties:
      AuthorizationType: API_KEY
      Description: 'My connection with an API key'
      AuthParameters:
        ApiKeyAuthParameters:
          ApiKeyName: MyWebhook
          ApiKeyValue: MyAPIkey

# When you configure the destination, you must also set an invocation rate limit between 1 and 300 events per second.
# This helps protect the downstream endpoint from surges in traffic. If the number of arriving events exceeds the limit,
# the EventBridge service queues up events. It delivers to the endpoint as quickly as possible within the rate limit.
  MyApiDestination:
    Type: AWS::Events::ApiDestination
    Properties:
      Name: 'MyWebhookTest'
      ConnectionArn: !GetAtt MyConnection.Arn
      InvocationEndpoint: !Ref MyWebhookURL
      HttpMethod: POST
      InvocationRateLimitPerSecond: 10

  EventBridgeTargetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole      
      Policies:
        - PolicyName: AllowAPIdestinationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'events:InvokeApiDestination'
                Resource: !GetAtt MyApiDestination.Arn

  EventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "EventRule"
      State: "ENABLED"
      EventBusName: !Ref MyEventBus
      EventPattern: 
        source:
          - "MyTestApp"
        detail-type:
          - "MyTestMessage"       
      Targets: 
        - Arn: !GetAtt MyApiDestination.Arn
          RoleArn: !GetAtt EventBridgeTargetRole.Arn
          Id: "MyAPIdestination"

Outputs:
  MyEventBusName:
    Description: Application EventBus Name
    Value: !Ref MyEventBus

  MyEventBusArn:
    Description: Application EventBus ARN
    Value: !GetAtt MyEventBus.Arn

  MyConnectionName:
    Value: !Ref MyConnection
  MyConnectionArn:
    Value: !GetAtt MyConnection.Arn        

  MyApiDestinationName:
    Value: !Ref MyApiDestination
  MyApiDestinationArn:
    Value: !GetAtt MyApiDestination.Arn

  EventBridgeTargetRoleArn:
    Value: !GetAtt EventBridgeTargetRole.Arn